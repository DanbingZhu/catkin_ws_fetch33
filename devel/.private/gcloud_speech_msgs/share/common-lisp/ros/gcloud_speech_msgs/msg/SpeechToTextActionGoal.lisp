; Auto-generated. Do not edit!


(cl:in-package gcloud_speech_msgs-msg)


;//! \htmlinclude SpeechToTextActionGoal.msg.html

(cl:defclass <SpeechToTextActionGoal> (roslisp-msg-protocol:ros-message)
  ((header
    :reader header
    :initarg :header
    :type std_msgs-msg:Header
    :initform (cl:make-instance 'std_msgs-msg:Header))
   (goal_id
    :reader goal_id
    :initarg :goal_id
    :type actionlib_msgs-msg:GoalID
    :initform (cl:make-instance 'actionlib_msgs-msg:GoalID))
   (goal
    :reader goal
    :initarg :goal
    :type gcloud_speech_msgs-msg:SpeechToTextGoal
    :initform (cl:make-instance 'gcloud_speech_msgs-msg:SpeechToTextGoal)))
)

(cl:defclass SpeechToTextActionGoal (<SpeechToTextActionGoal>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <SpeechToTextActionGoal>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'SpeechToTextActionGoal)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name gcloud_speech_msgs-msg:<SpeechToTextActionGoal> is deprecated: use gcloud_speech_msgs-msg:SpeechToTextActionGoal instead.")))

(cl:ensure-generic-function 'header-val :lambda-list '(m))
(cl:defmethod header-val ((m <SpeechToTextActionGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader gcloud_speech_msgs-msg:header-val is deprecated.  Use gcloud_speech_msgs-msg:header instead.")
  (header m))

(cl:ensure-generic-function 'goal_id-val :lambda-list '(m))
(cl:defmethod goal_id-val ((m <SpeechToTextActionGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader gcloud_speech_msgs-msg:goal_id-val is deprecated.  Use gcloud_speech_msgs-msg:goal_id instead.")
  (goal_id m))

(cl:ensure-generic-function 'goal-val :lambda-list '(m))
(cl:defmethod goal-val ((m <SpeechToTextActionGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader gcloud_speech_msgs-msg:goal-val is deprecated.  Use gcloud_speech_msgs-msg:goal instead.")
  (goal m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <SpeechToTextActionGoal>) ostream)
  "Serializes a message object of type '<SpeechToTextActionGoal>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'header) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'goal_id) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'goal) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <SpeechToTextActionGoal>) istream)
  "Deserializes a message object of type '<SpeechToTextActionGoal>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'header) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'goal_id) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'goal) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<SpeechToTextActionGoal>)))
  "Returns string type for a message object of type '<SpeechToTextActionGoal>"
  "gcloud_speech_msgs/SpeechToTextActionGoal")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'SpeechToTextActionGoal)))
  "Returns string type for a message object of type 'SpeechToTextActionGoal"
  "gcloud_speech_msgs/SpeechToTextActionGoal")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<SpeechToTextActionGoal>)))
  "Returns md5sum for a message object of type '<SpeechToTextActionGoal>"
  "6175e2e8b986c5e017d26c349a3f49c4")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'SpeechToTextActionGoal)))
  "Returns md5sum for a message object of type 'SpeechToTextActionGoal"
  "6175e2e8b986c5e017d26c349a3f49c4")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<SpeechToTextActionGoal>)))
  "Returns full string definition for message of type '<SpeechToTextActionGoal>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%SpeechToTextGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: gcloud_speech_msgs/SpeechToTextGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Goal definition~%# Equivalent to google.cloud.speech.v1.StreamingRecognitionConfig. See also:~%# https://cloud.google.com/speech/reference/rpc/google.cloud.speech.v1#streamingrecognitionconfig~%~%# A list of strings containing words and phrases \"hints\" so that the speech~%# recognition is more likely to recognize them. This can be used to improve the~%# accuracy for specific words and phrases, for example, if specific commands are~%# typically spoken by the user. This can also be used to add additional words to~%# the vocabulary of the recognizer.~%string[] hints~%~%# Maximum number of recognition hypotheses to be returned. Specifically, the~%# maximum number of RecognitionHypothesis messages within each~%# SpeechToTextFeedback. The server may return fewer than max_alternatives. Valid~%# values are 0-30. A value of 0 or 1 will return a maximum of one. If omitted,~%# will return a maximum of one.~%int32 max_alternatives~%~%# Maximum listening duration. The recognizer will start listening immediately,~%# and will stop listening after \"listen_duration_sec\" seconds. If 0 or omitted,~%# will use an internal default value (14 seconds).~%int32 listen_duration_sec~%~%# Maximum recognition duration. The recognizer will start counting down~%# immediately, and after max_recognition_duration_sec seconds it will return no~%# matter whether there is a recognition result. If 0 or omitted, will use~%# a default value: listen_duration_sec + 2.~%int32 max_recognition_duration_sec~%~%~%# If false or omitted, interim results (tentative hypotheses) may be returned as~%# they become available (these interim results are indicated with the~%# is_portion_final=false flag). If true, only is_portion_final=true result(s)~%# are returned.~%bool suppress_interim_results~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'SpeechToTextActionGoal)))
  "Returns full string definition for message of type 'SpeechToTextActionGoal"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%SpeechToTextGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: gcloud_speech_msgs/SpeechToTextGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Goal definition~%# Equivalent to google.cloud.speech.v1.StreamingRecognitionConfig. See also:~%# https://cloud.google.com/speech/reference/rpc/google.cloud.speech.v1#streamingrecognitionconfig~%~%# A list of strings containing words and phrases \"hints\" so that the speech~%# recognition is more likely to recognize them. This can be used to improve the~%# accuracy for specific words and phrases, for example, if specific commands are~%# typically spoken by the user. This can also be used to add additional words to~%# the vocabulary of the recognizer.~%string[] hints~%~%# Maximum number of recognition hypotheses to be returned. Specifically, the~%# maximum number of RecognitionHypothesis messages within each~%# SpeechToTextFeedback. The server may return fewer than max_alternatives. Valid~%# values are 0-30. A value of 0 or 1 will return a maximum of one. If omitted,~%# will return a maximum of one.~%int32 max_alternatives~%~%# Maximum listening duration. The recognizer will start listening immediately,~%# and will stop listening after \"listen_duration_sec\" seconds. If 0 or omitted,~%# will use an internal default value (14 seconds).~%int32 listen_duration_sec~%~%# Maximum recognition duration. The recognizer will start counting down~%# immediately, and after max_recognition_duration_sec seconds it will return no~%# matter whether there is a recognition result. If 0 or omitted, will use~%# a default value: listen_duration_sec + 2.~%int32 max_recognition_duration_sec~%~%~%# If false or omitted, interim results (tentative hypotheses) may be returned as~%# they become available (these interim results are indicated with the~%# is_portion_final=false flag). If true, only is_portion_final=true result(s)~%# are returned.~%bool suppress_interim_results~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <SpeechToTextActionGoal>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'header))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'goal_id))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'goal))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <SpeechToTextActionGoal>))
  "Converts a ROS message object to a list"
  (cl:list 'SpeechToTextActionGoal
    (cl:cons ':header (header msg))
    (cl:cons ':goal_id (goal_id msg))
    (cl:cons ':goal (goal msg))
))
